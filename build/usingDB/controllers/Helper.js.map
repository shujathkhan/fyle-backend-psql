{"version":3,"sources":["../../../src/usingDB/controllers/Helper.js"],"names":["Helper","hashPassword","password","bcrypt","hashSync","genSaltSync","comparePassword","compareSync","isValidEmail","email","test","generateToken","id","token","jwt","sign","userId","process","env","SECRET","expiresIn"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,SAAS;AACb;;;;;AAKAC,cANa,wBAMAC,QANA,EAMU;AACrB,WAAOC,iBAAOC,QAAP,CAAgBF,QAAhB,EAA0BC,iBAAOE,WAAP,CAAmB,CAAnB,CAA1B,CAAP;AACD,GARY;;AASb;;;;;;AAMAC,iBAfa,2BAeGL,YAfH,EAeiBC,QAfjB,EAe2B;AACtC,WAAOC,iBAAOI,WAAP,CAAmBL,QAAnB,EAA6BD,YAA7B,CAAP;AACD,GAjBY;;AAkBb;;;;;AAKAO,cAvBa,wBAuBAC,KAvBA,EAuBO;AAClB,WAAO,gBAAeC,IAAf,CAAoBD,KAApB;AAAP;AACD,GAzBY;;AA0Bb;;;;;AAKAE,eA/Ba,yBA+BCC,EA/BD,EA+BK;AAChB,QAAMC,QAAQC,uBAAIC,IAAJ,CAAS;AACrBC,cAAQJ;AADa,KAAT,EAGZK,QAAQC,GAAR,CAAYC,MAHA,EAGQ,EAAEC,WAAW,IAAb,EAHR,CAAd;AAKA,WAAOP,KAAP;AACD;AAtCY,CAAf;;kBAyCeb,M","file":"Helper.js","sourcesContent":["import bcrypt from 'bcrypt';\nimport jwt from 'jsonwebtoken';\n\nconst Helper = {\n  /**\n   * Hash Password Method\n   * @param {string} password\n   * @returns {string} returns hashed password\n   */\n  hashPassword(password) {\n    return bcrypt.hashSync(password, bcrypt.genSaltSync(8))\n  },\n  /**\n   * comparePassword\n   * @param {string} hashPassword \n   * @param {string} password \n   * @returns {Boolean} return True or False\n   */\n  comparePassword(hashPassword, password) {\n    return bcrypt.compareSync(password, hashPassword);\n  },\n  /**\n   * isValidEmail helper method\n   * @param {string} email\n   * @returns {Boolean} True or False\n   */\n  isValidEmail(email) {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  },\n  /**\n   * Gnerate Token\n   * @param {string} id\n   * @returns {string} token\n   */\n  generateToken(id) {\n    const token = jwt.sign({\n      userId: id\n    },\n      process.env.SECRET, { expiresIn: '5d' }\n    );\n    return token;\n  }\n}\n\nexport default Helper;\n"]}