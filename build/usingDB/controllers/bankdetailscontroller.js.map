{"version":3,"sources":["../../../src/usingDB/controllers/bankdetailscontroller.js"],"names":["myData","Status","RequestTime","MessageDetails","code","Message","PayLoad","bankdetails","getBankDetail","req","res","console","log","text","db","query","params","ifsc","limit","offset","rows","Date","status","send","JSON","stringify","getBranchDetail","bankname","city"],"mappings":"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","sourcesContent":["\nimport db from '../db';\n\nlet myData = {\n  Status: null,\n  RequestTime: null,\n  MessageDetails: {\n    code:null,\n    Message:null\n  },\n  PayLoad: null\n}\nconst bankdetails = {\n  /*\n  * Get A Bank detail\n  * @param {object} req \n  * @param {object} res\n  * @returns {object} bankbranch object\n  */\n\n\n  async getBankDetail(req, res) {\n    console.log(req);\n    \n    const text = 'SELECT * FROM bank_branches WHERE ifsc = $1 LIMIT $2 OFFSET $3';\n    try {\n      \n      const { rows } = await db.query(text, [req.params.ifsc, req.params.limit, req.params.offset]);\n      console.log(req);\n      if (!rows[0]) {\n        \n        myData.Status = \"failure\";\n        myData.RequestTime = new Date()\n        myData.MessageDetails.code = 0;\n        myData.MessageDetails.Message = \"Bank details not found\";\n        myData.PayLoad = [];\n        \n        return res.status(404).send(myData);\n      }\n      myData.Status = \"success\";\n      myData.MessageDetails.code = 1;\n      myData.RequestTime = new Date()\n      myData.MessageDetails.Message = \"fetched\";\n      myData.PayLoad = rows;\n\n      return res.status(200).send(myData);\n    } catch (error) {\n      \n      myData.Status = \"error\";\n      myData.RequestTime = new Date()\n      myData.MessageDetails.code = -99;\n      myData.MessageDetails.Message = JSON.stringify(error);\n      myData.PayLoad = [];\n      return res.status(400).send(myData)\n    }\n  },\n  async getBranchDetail(req, res) {\n    const text = 'SELECT * FROM bank_branches WHERE bank_name = $1 AND city = $2 LIMIT $3 OFFSET $4';\n\n\n    try {\n      const { rows } = await db.query(text, [req.params.bankname, req.params.city, req.params.limit, req.params.offset]);\n      console.log(text);\n      if (!rows[0]) {\n        myData.Status = \"failure\";\n        myData.MessageDetails.code = 0;\n        myData.RequestTime = new Date()\n        \n        myData.MessageDetails.Message = \"Bank details not found\";\n        myData.PayLoad = [];\n        return res.status(404).send(myData);\n      }\n      myData.Status = \"success\";\n      myData.RequestTime = new Date()\n      myData.MessageDetails.code = 1;\n      myData.MessageDetails.Message = \"fetched\";\n      myData.PayLoad = rows;\n      return res.status(200).send(myData);\n    } catch (error) {\n      \n      myData.Status = \"error\";\n      myData.MessageDetails.code = -99;\n      myData.RequestTime = new Date()\n      myData.MessageDetails.Message = JSON.stringify(error);\n      myData.PayLoad = [];\n      return res.status(400).send(myData)\n    }\n  }\n}\n\nexport default bankdetails;"],"file":"bankdetailscontroller.js"}