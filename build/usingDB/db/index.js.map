{"version":3,"sources":["../../../src/usingDB/db/index.js"],"names":["dotenv","config","pool","Pool","connectionString","process","env","DATABASE_URL","query","text","params","Promise","resolve","reject","then","res","catch","err"],"mappings":";;;;;;AAAA;;AACA;;;;;;AAEAA,iBAAOC,MAAP;;AAEA,IAAMC,OAAO,IAAIC,QAAJ,CAAS;AACpBC,oBAAkBC,QAAQC,GAAR,CAAYC;AADV,CAAT,CAAb;;kBAIe;AACb;;;;;;AAMAC,OAPa,iBAOPC,IAPO,EAODC,MAPC,EAOM;AACjB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCX,WAAKM,KAAL,CAAWC,IAAX,EAAiBC,MAAjB,EACCI,IADD,CACM,UAACC,GAAD,EAAS;AACbH,gBAAQG,GAAR;AACD,OAHD,EAICC,KAJD,CAIO,UAACC,GAAD,EAAS;AACdJ,eAAOI,GAAP;AACD,OAND;AAOD,KARM,CAAP;AASD;AAjBY,C","file":"index.js","sourcesContent":["import { Pool } from 'pg';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst pool = new Pool({\n  connectionString: process.env.DATABASE_URL\n});\n\nexport default {\n  /**\n   * DB Query\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} object \n   */\n  query(text, params){\n    return new Promise((resolve, reject) => {\n      pool.query(text, params)\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((err) => {\n        reject(err);\n      })\n    })\n  }\n}"]}