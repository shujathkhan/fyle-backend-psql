{"version":3,"sources":["../../../src/usingDB/db/index.js"],"names":["dotenv","config","pool","Pool","connectionString","process","env","DATABASE_URL","query","text","params","Promise","resolve","reject","then","res","err"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEAA,mBAAOC,MAAP;;AAEA,IAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAS;AACpBC,EAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADV,CAAT,CAAb;eAIe;AACb;;;;;;AAMAC,EAAAA,KAPa,iBAOPC,IAPO,EAODC,MAPC,EAOM;AACjB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCX,MAAAA,IAAI,CAACM,KAAL,CAAWC,IAAX,EAAiBC,MAAjB,EACCI,IADD,CACM,UAACC,GAAD,EAAS;AACbH,QAAAA,OAAO,CAACG,GAAD,CAAP;AACD,OAHD,WAIO,UAACC,GAAD,EAAS;AACdH,QAAAA,MAAM,CAACG,GAAD,CAAN;AACD,OAND;AAOD,KARM,CAAP;AASD;AAjBY,C","sourcesContent":["import { Pool } from 'pg';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst pool = new Pool({\n  connectionString: process.env.DATABASE_URL\n});\n\nexport default {\n  /**\n   * DB Query\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} object \n   */\n  query(text, params){\n    return new Promise((resolve, reject) => {\n      pool.query(text, params)\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((err) => {\n        reject(err);\n      })\n    })\n  }\n}"],"file":"index.js"}